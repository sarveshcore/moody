name: Deploy to Cloud Run

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: moody
  REGION: europe-west1
  IMAGE_NAME: europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/moody-repo/moody

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:$GITHUB_SHA .
          docker tag $IMAGE_NAME:$GITHUB_SHA $IMAGE_NAME:latest

      - name: Push Docker image to GCR
        run: |
          docker push $IMAGE_NAME:$GITHUB_SHA
          docker push $IMAGE_NAME:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $IMAGE_NAME:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --port 3000 \
            --memory 1Gi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 10 \
            --set-env-vars="NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }},NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }},NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }},NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }},NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }},NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}"

      - name: Get Cloud Run URL
        id: get-url
        run: |
          URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format="value(status.url)")
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "Service URL: $URL"

      - name: Health Check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30

          # Health check with retry logic
          for i in {1..5}; do
            echo "Health check attempt $i/5"
            if curl -f -s --max-time 30 "${{ steps.get-url.outputs.url }}" > /dev/null; then
              echo "✅ Health check passed!"
              exit 0
            else
              echo "❌ Health check failed, retrying in 10 seconds..."
              sleep 10
            fi
          done

          echo "❌ Health check failed after 5 attempts"
          exit 1

      - name: Verify deployment
        run: |
          echo "🚀 Deployment completed successfully!"
          echo "📱 App URL: ${{ steps.get-url.outputs.url }}"
          echo "🔍 Checking if app responds with expected content..."

          # Check if the response contains expected content
          if curl -s "${{ steps.get-url.outputs.url }}" | grep -q "MOODY"; then
            echo "✅ App is responding with expected content!"
          else
            echo "⚠️  App is running but may not be serving expected content"
          fi
